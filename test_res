//sSpdDioOuUxXcC
//%%
//flags #0-+ and space
//minimum field-width
//the precision
// flags hh, h, l, ll, j, et z.
//flag ' ' is ignored when flag '+' is present
//flag '0' is ignored when flag '-' is present
//z > j > ll > l > h > hh
//для интов учитывать длину изначальную или после модификаторов?
//types Must contain at least one type. Example: "diouxX"
//length, you must mark it as "-|other_flags", otherwise it will be ignored. Example: "-|hh|ll"
//flag '0' results in undefined behavior with 'S' conversion specifier

//More detailed conversions management: eE, fF, gG, aA, n.
//More detailed flags management: *, $, L, ’.
//Non-existing flags management: %b to print in binary, %r to print a string of nonprintable
//characters, %k to print a date in any ordinary ISO format etc.
//Management of alter tools for colors, fd or other fun stuff like that :)
//перевести все в итоа, для ансайнд - сайз т, для сайнд - интмакс, но внутри привести к сайз т без минуса, а минус сохранить
//не указана тип, но есть буква - выводится она, если есть только число - это считается шириной - проверить остельные флаги без типа
// Большас С - нужно ли приводить к винт_т?
//проверить, если спецификаторов больше чем аргументов, не вылетает ли мой принтф, сделать проверку
// %n проверить на нулл
//в большой С нужна проверка на 0, может и в маленькой тоже
// Main results: [ 30044//////////// 30812] Bonus results: [  5975////// 28734] 24671
printf("NUMBER %d\n", printf("%3.2d", -1));
printf("NUMBER %d\n", ft_printf("%3.2d", -1));
// проверить чтоб не было запрещенных функций
printf("NUMBER %d\n", printf("|%2.lc|", 129));
printf("NUMBER %d\n", ft_printf("|%2.lc|", 129));
1

1, 42 = 1 * 10**0 + 4 * 10 ** -1 + 2 * 10 ** -2
